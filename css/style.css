:root{
    --blanco: #ffffff;
    --oscuro: #212121;
    --primario: #FFC107;
    --secundario: #0097A7;
    --gris: #757575;
    --grisClaro: #DFE9F3;
}

/*Globales*/
html {
    font-size: 62.5%; /*damos proporcion para el rem*/
    box-sizing: border-box; /*Es para que los elementos no aumenten el tamaño con un padding, borde, margen y se quede con el que especificamos*/
    scroll-snap-type: y mandatory;/*Definimos el scroll que va a ir en el eje de las "y" de arriba hacia abajo, usamos "mandatory porque da una mejor usabilidad"*/
}
.navegador-principal,
.servicios,
.formulario{
    scroll-snap-align: center;
    scroll-snap-stop: always;
}
*, *:before, *:after {/*Se le agrega a todos los elementos para que no aunmenten el tamaño y se quede con el que especificamos*/
    box-sizing: inherit;
  }
body {
    font-size: 16px; /* 1rem = 10px es la medida y se ajusta para mas dispositivos*/
    font-family: 'Krub', sans-serif;
    background-image: linear-gradient(to top, var(--grisClaro) 0%, var(--blanco) 100%);/*DA un degradado de abajo hacia arriba con "top"*/
}
.contenedor{
    max-width: 120rem;
    /*MARGIN da los margenes hacia afuera y es como en un reloj 12(arriba), 3(derecha), 6(abajo), 9(izquierda)*/
    margin: 0 auto;/*Tener solo dos valores es como tener 4 y se aplica para los dos faltantes*/
}
.boton{
    background-color: var(--secundario);
    color: var(--blanco);
    padding: 1rem 3rem;
    margin-top: 3rem;
    font-size: 2rem;
    text-decoration: none;
    text-transform: uppercase;
    font-weight: 700;/*bold y 700 es lo mismo*/
    border-radius: .5rem;
    width: 90%;
    text-align: center;
    border: none;/*Sin borde*/
}
@media (min-width: 768px) {
    .boton{
        width: auto;/*se reinicia el valor */
    }
}
.boton:hover{
    cursor: pointer;
}
.sombra{
    -webkit-box-shadow: 0px 5px 15px 0px rgba(0,0,0,0.35);
    -moz-box-shadow: 0px 5px 15px 0px rgba(0,0,0,0.35);
    box-shadow: 0px 5px 15px 0px rgba(0,0,0,0.35);
    background-color: var(--blanco);
    padding: 2rem;
    border-radius: 1rem;
}

/*Tipografia*/
h1{
    font-size: 3.8rem; /*rem Es la medida y se ajusta para mas dispositivos, este es igual a 38px*/
}
h2{
    font-size: 2.8rem; /*rem Es la medida y se ajusta para mas dispositivos, este es igual a 28px*/
}
h3{
    font-size: 1.8rem; /*rem Es la medida y se ajusta para mas dispositivos, este es igual a 18px*/
}
h1,h2,h3{
    text-align: center;
}

/*Titulo*/
.titulo span {/*Nombre de una clase que incluya un span*/
    font-size: 2rem;
}

/*Utilidades*/
.w-sm-100{
    width: 100%;/*Ancho del 100% y es utilidad porque solo posee un atributo*/
}
@media (min-width: 768px) {
    .w-sm-100{
        width: auto;
    }
}
.flex{
    display: flex;/*Activamos el flex*/
}
.alinear-derecha{
    justify-content: flex-end;/*Alineamos usando una propiedad del flex a la derecha*/
}

/*Navegacion principal*/
.nav-bg{/*Nombre de una clase*/
    background-color: var(--secundario);
}
.navegador-principal{
    display: flex; /*Agrega las propiedades de "flex-box", acomoda el diseñoa automaticamente*/
    flex-direction: column;
}
@media (min-width: 768px) {/*media sirve para que sea responsive una pagina en diferentes dispositivos*/
    .navegador-principal{
        flex-direction: row;
        justify-content: space-between;
    }
}
.navegador-principal a{
    display: block;/*el block coloca el contenido uno debajo del otro*/
    text-align: center;
    color: var(--blanco);
    text-decoration: none;
    /*PADDING da los margenes hacia adentro y engorda o engruesa el elemento y es como en un reloj 12(arriba), 3(derecha), 6(abajo), 9(izquierda)*/
    padding: 1rem ;/*Tenerlo una ves es como tenerlo 4 veces con el mismo valor*/
    font-weight: 700;
    font-size: 2rem;
}
.navegador-principal a:hover{/*hover agrega el estilo al enlace*/
    background-color: var(--primario);
    color: var(--oscuro); 
}

/*Hero*/
.hero {
    background-image: url(../img/hero.jpg);
    background-repeat: no-repeat;
    background-size: cover;
    height: 450px;
    padding: 20px;
    position: relative;
    margin-bottom: 2rem;/*Margen del hero de 2 o 20 px para dar una separacion hacia abajo con el "Bottom"*/
}
.contenido-hero{
    position: absolute;
    background-color: rgba(0, 0, 0, .8);/*Anterior forma de declarar con transparencia*/
    background-color: rgb(0 0 0 /80%);/*Nueva forma pero con menos soporte aun*/
    
    /*Todo esto es igual a ponerlo con width y height*/
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    /*si se usa width y height se debe de quitar el padding*/
    /*width: 100%;
    height: 100%;*/
    
    /*Cuando se aplica display flex se alinea horizontalmente con justify content, siempre y cuando no se cambie
    a el flex-direction a "colum"*/
    display: flex;/*el flex coloca el contenido uno a lado del otro*/
    flex-direction: column;
    align-items: center;/*alinea contenido horizontalmente cuando el "flex-direction sea colum" si no, aliena verticalmente*/
    justify-content: center;/*alinea contenido verticalmente cuando el "flex-direction sea colum" si no, alinea horizontalmente*/
}
.contenido-hero h2,
.contenido-hero p{
    color: var(--blanco);
}
.contenido-hero .ubicacion{/*Alineamos un icono con el texto*/
    display: flex;
    align-items: flex-end;/*No se cambio la direccion, sigue siendo row, asi que no cambia la direccion y alinea verticalmente*/
    /*Con el flex-end aliena verticalmente hacia abajo*/
}

/*Servicios*/
@media (min-width: 768px) {
    .servicios{
        display: grid;/*Agrega las propiedades de "css grid", nos da mas control en el diseño que flex-box*/
    
        /*Para declarar las columnas se pueden hacer de las siguientes maneras, ya que son lo mismo*/
        grid-template-columns: repeat(3, 1fr);
        /*grid-template-columns: 1fr 1fr 1fr;
        grid-template-columns: 33.3% 33.3% 33.3%;*/
        column-gap: 2rem;/*Agregamos espacio entre las columnas del grid*/
    }
}
.servicio{
    display: flex;
    flex-direction: column;
    align-items: center;
}
.servicio h3{
    color: var(--secundario);
    font-weight: 400;/*Quitamos o damos mas grosor al texto con el bold(700) o normal(400)*/
}
.servicio p{
    line-height: 2;/*Damos un espaciado de 2 a un parrafo*/
}
.servicio .iconos{
    height: 15rem;
    width: 15rem;
    background-color: var(--primario);
    border-radius: 50%;/*Es para bordes pero si se tiene un cuadrado, al 50% se hace un circulo*/

    /*Se pocisionan los iconos tanto horizontal como verticalmente*/
    display: flex;/*Lo coloca uno enfrente del otro*/
    justify-content: space-evenly;
    align-items: center;
}

/*Contacto*/
.formulario{
    background-color: var(--gris);
    width: min(60rem, 100%);/*Esta funcion nos ahorra media querys, ya que se le da indicacion de que tome "60rem" pero cuando sea menor a esos "60" debe de tomar el "100%"*/
    margin: 0 auto;/*se utiliza cuando el padre no tiene un "display flex"*/
    padding: 2rem;
    border-radius: 1rem;
}
.formulario fieldset{
    border: none;
}
.formulario legend{
    text-align: center;/*Centra*/
    font-size: 1.8rem;/*Tamaño*/
    text-transform: uppercase;/*Mayusculas*/
    font-weight: 700;/*Grosor*/
    margin-bottom: 2rem;/*Margen de abajo*/
    color: var(--primario);/*Color*/
}
@media (min-width: 768px) {/*solo apica en un determinado tamaño*/
    .contenedor-campos{
        display: grid;/*Activamos el grid*/
        grid-template-columns: 50% 50%;/*para dividir las columnas en 2*/
        grid-template-rows: auto auto 20rem;/*Tamaño de las filas*/
        column-gap: 1rem;/*Separacion de columnas*/
    }   
    .campo:nth-child(3),
    .campo:nth-child(4){/*":nth-child" es un seudo selector, que nos ayuda a seleccionar una clase en especifica si es que hay muchos con el mismo nombre, haciendo como un arreglo desde el 1*/
        grid-column: 1 / 3;/*Posicionar un elemento ocupando las columnas deseadas en este caso de la 1 a la 3*/
    }
}
.campo{
margin-bottom: 1rem;/*Margen hacia abajo de los inputs*/
}
.campo label{
    color: var(--blanco);/*Color*/
    font-weight: 700;/*Grosor de texto*/
    margin-bottom: .5rem;/*Margen de abajo*/
    display: block;/*Alineacion en bloque hacia abajo*/
}
.campo textarea{
    height: 20rem;/*Altura del textarea*/
}
.input-text{
    width: 100%;/*Ancho del 100%*/
    border: none;/*Sin bordes*/
    padding: 1.5rem;/*Tamaño dentro del input de 1.5*/
    border-radius: .5rem;/*esquinas curvas*/
}
/*Footer*/
.footer{
    text-align: center;
}